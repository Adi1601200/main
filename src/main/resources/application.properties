server.port=8087

spring.mvc.pathmatch.matching-strategy= ant_path_matcher


#kakfa consumer
spring.kakfa.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: myGroup
spring.kakfa.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#kafka producer
spring.kakfa.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-deserializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-deserializer: org.springframework.kafka.support.serializer.JsonSerializer

#postgres
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/post_service?autoReconnect=true&useUnicode=yes&characterEncoding=UTF-8}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:123456}

spring.datasource.hikari.connection-timeout = 20000
spring.datasource.hikari.minimum-idle= 10
spring.datasource.hikari.maximum-pool-size= 100
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime= 1000

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.show-sql=true
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1;
spring.datasource.validation-interval=30000

#redis
spring.session.store-type=redis
spring.redis.host=localhost
spring.redis.port=6379

spring.security.oauth2.client.registration.google.clientId=51837174009-38holp2dn1jupeqh3onqmbt94umo4ja9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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


